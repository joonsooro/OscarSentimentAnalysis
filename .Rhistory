runApp()
movie_title = c()
number_count = c()
for(i in 1:length(temp)){
movie_title = c(movie_title, gsub(as.character(temp[i]), pattern=".csv$", replacement=""))
number_count = c(number_count, nrow(get(paste0("dataframe",(i)))))
}
commentcounts = data.frame("movie_title"=movie_title, "number_counts"=number_count)
commentcounts
temp = list.files(pattern="*.csv", path="./data")
movie_title = c()
number_count = c()
for (i in 1:length(temp)){
assign(paste0("dataframe",i), read.csv(paste0("./data/",temp[i]))%>%
mutate(., movie = gsub(as.character(temp[i]), pattern=".csv$", replacement="")))
}
movie_title = c()
number_count = c()
for(i in 1:length(temp)){
movie_title = c(movie_title, gsub(as.character(temp[i]), pattern=".csv$", replacement=""))
number_count = c(number_count, nrow(get(paste0("dataframe",(i)))))
}
commentcounts = data.frame("movie_title"=movie_title, "number_counts"=number_count)
cemmentcounts
commentcounts
commentlength =c()
for(i in length(temp)){
commentlength = c(commentlength, str_count(get(paste0("dataframe",(i))))$comment_text,"\\S+")
}
commentlength = commentlength[commentlength<80]
commentlength = data.frame(commentlength)
commentlength
commentlength =c()
for(i in length(temp)){
commentlength = c(commentlength, str_count(get(paste0("dataframe",(i)))$comment_text,"\\S+"))
}
commentlength = commentlength[commentlength<80]
commentlength = data.frame(commentlength)
View(commentlength)
choice
choice = c()
for(i in 1:length(temp)){
choice = c(choice, gsub(as.character(temp[i]), pattern=".csv$", replacement=""))
}
choice
head(tidy_total)
#create a comprehensive dataframe to "selectize" each movies as input
totaldataframe = data.frame()
for (i in 1:length(temp)){
totaldataframe =  rbind(totaldataframe, get(paste0("dataframe",(i))))
}
tidy_total = totaldataframe%>%
filter(!str_detect(comment_text, "^RT")) %>%
mutate(text = str_remove_all(comment_text, remove_reg)) %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word,
!word %in% str_remove_all(stop_words$word, "'"),
str_detect(word, "[a-z]")) %>%
mutate(., date = anydate(timestamp/1000))
tidy_total = within(tidy_total, rm(timestamp))
#get the names of the .csv files as a list
temp = list.files(pattern="*.csv", path="./data")
#get each dataframe with the names
for (i in 1:length(temp)){
assign(paste0("dataframe",i), read.csv(paste0("./data/",temp[i]))%>%
mutate(., movie = gsub(as.character(temp[i]), pattern=".csv$", replacement="")))
}
#create a dataframe to show the comment counts of the movies
movie_title = c()
number_count = c()
for(i in 1:length(temp)){
movie_title = c(movie_title, gsub(as.character(temp[i]), pattern=".csv$", replacement=""))
number_count = c(number_count, nrow(get(paste0("dataframe",(i)))))
}
commentcounts = data.frame("movie_title"=movie_title, "number_counts"=number_count)
#create a dataframe to show the string counts of the movies
commentlength =c()
for(i in length(temp)){
commentlength = c(commentlength, str_count(get(paste0("dataframe",(i)))$comment_text,"\\S+"))
}
commentlength = commentlength[commentlength<80]
commentlength = data.frame(commentlength)
#create a comprehensive dataframe to "selectize" each movies as input
totaldataframe = data.frame()
for (i in 1:length(temp)){
totaldataframe =  rbind(totaldataframe, get(paste0("dataframe",(i))))
}
tidy_total = totaldataframe%>%
filter(!str_detect(comment_text, "^RT")) %>%
mutate(text = str_remove_all(comment_text, remove_reg)) %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word,
!word %in% str_remove_all(stop_words$word, "'"),
str_detect(word, "[a-z]")) %>%
mutate(., date = anydate(timestamp/1000))
remove_reg <- "&amp;|&lt;|&gt;"
tidy_total = totaldataframe%>%
filter(!str_detect(comment_text, "^RT")) %>%
mutate(text = str_remove_all(comment_text, remove_reg)) %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word,
!word %in% str_remove_all(stop_words$word, "'"),
str_detect(word, "[a-z]")) %>%
mutate(., date = anydate(timestamp/1000))
tidy_total = within(tidy_total, rm(timestamp))
choice = c()
for(i in 1:length(temp)){
choice = c(choice, gsub(as.character(temp[i]), pattern=".csv$", replacement=""))
}
choice
head(tidy_total)
colnames(tidy_total)
levels(as.factor(tidy_total$movie))
choice
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
View(commentcounts)
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
View(tidy_total)
runApp('~/NYCDSA/OscarPrac')
tidy_sentiment = tidy_total  %>%
inner_join(nrc) %>%
count(sentiment, sort = TRUE)
nrc <- get_sentiments("nrc")
bing <- get_sentiments("bing")
runApp('~/NYCDSA/OscarPrac')
tidy_sentiment = tidy_total  %>%
inner_join(nrc) %>%
count(sentiment, sort = TRUE)
View(tidy_sentiment)
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
tidy_total_bing <- tidy_total %>%
inner_join(bing) %>% group_by(date,sentiment) %>% summarize(number_comment = n())%>%
spread(., key=sentiment, value = number_comment)
time_total_bing[is.na(time_Call_Me)]<-0
tidy_total_bing <- tidy_total %>%
inner_join(bing) %>% group_by(date,sentiment) %>% summarize(number_comment = n())%>%
spread(., key=sentiment, value = number_comment)
time_total_bing[is.na(tidy_total_bing)]<-0
tidy_total_bing <- tidy_total %>%
inner_join(bing) %>% group_by(date,sentiment) %>% summarize(number_comment = n())%>%
spread(., key=sentiment, value = number_comment)
tidy_total_bing[is.na(tidy_total_bing)]<-0
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
?comparison.cloud
if(require(tm)){
data(SOTU)
corp <- SOTU
corp <- tm_map(corp, removePunctuation)
corp <- tm_map(corp, content_transformer(tolower))
corp <- tm_map(corp, removeNumbers)
corp <- tm_map(corp, function(x)removeWords(x,stopwords()))
term.matrix <- TermDocumentMatrix(corp)
term.matrix <- as.matrix(term.matrix)
colnames(term.matrix) <- c("SOTU 2010","SOTU 2011")
comparison.cloud(term.matrix,max.words=40,random.order=FALSE)
comparison.cloud(term.matrix,max.words=40,random.order=FALSE,
title.colors=c("red","blue"),title.bg.colors=c("grey40","grey70"))
comparison.cloud(term.matrix,max.words=40,random.order=FALSE,
match.colors=TRUE)
}
if(require(tm)){
data(SOTU)
corp <- SOTU
corp <- tm_map(corp, removePunctuation)
corp <- tm_map(corp, content_transformer(tolower))
corp <- tm_map(corp, removeNumbers)
corp <- tm_map(corp, function(x)removeWords(x,stopwords()))
term.matrix <- TermDocumentMatrix(corp)
term.matrix <- as.matrix(term.matrix)
colnames(term.matrix) <- c("SOTU 2010","SOTU 2011")
comparison.cloud(term.matrix,max.words=40,random.order=FALSE)
comparison.cloud(term.matrix,max.words=40,random.order=FALSE,
title.colors=c("red","blue"),title.bg.colors=c("grey40","grey70"))
comparison.cloud(term.matrix,max.words=40,random.order=FALSE,
match.colors=TRUE)
}
if(require(tm)){
data(SOTU)
corp <- SOTU
corp <- tm_map(corp, removePunctuation)
corp <- tm_map(corp, content_transformer(tolower))
corp <- tm_map(corp, removeNumbers)
corp <- tm_map(corp, function(x)removeWords(x,stopwords()))
term.matrix <- TermDocumentMatrix(corp)
term.matrix <- as.matrix(term.matrix)
colnames(term.matrix) <- c("SOTU 2010","SOTU 2011")
comparison.cloud(term.matrix,max.words=40,random.order=FALSE)
comparison.cloud(term.matrix,max.words=40,random.order=FALSE,
title.colors=c("red","blue"),title.bg.colors=c("grey40","grey70"))
comparison.cloud(term.matrix,max.words=40,random.order=FALSE,
match.colors=TRUE)
}
warnings()
if(require(tm)){
data(SOTU)
corp <- SOTU
corp <- tm_map(corp, removePunctuation)
corp <- tm_map(corp, content_transformer(tolower))
corp <- tm_map(corp, removeNumbers)
corp <- tm_map(corp, function(x)removeWords(x,stopwords()))
term.matrix <- TermDocumentMatrix(corp)
term.matrix <- as.matrix(term.matrix)
colnames(term.matrix) <- c("SOTU 2010","SOTU 2011")
comparison.cloud(term.matrix,max.words=40,random.order=FALSE)
comparison.cloud(term.matrix,max.words=40,random.order=FALSE,
title.colors=c("red","blue"),title.bg.colors=c("grey40","grey70"))
comparison.cloud(term.matrix,max.words=40,random.order=FALSE,
match.colors=TRUE)
}
runApp('~/NYCDSA/OscarPrac')
#bigram functions
count_bigrams <- function(dataset) {
dataset %>%
unnest_tokens(bigram, comment_text, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word,
!word2 %in% stop_words$word) %>%
count(word1, word2, sort = TRUE)
}
visualize_bigrams <- function(bigrams) {
set.seed(2016)
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
bigrams %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE, arrow = a) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
ggtitle("Network graph of bigrams") +
theme_void()
}
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
tidy_total %>%
filter(.,movie==input$selected) %>%
count_bigrams()
tidy_total %>%
filter(.,movie=="Dunkirk") %>%
count_bigrams()
tidy_total %>%
filter(.,movie=="Dunkirk") %>%
count_bigrams() %>%  View()
tidy_total %>%
filter(.,movie=="Dunkirk") %>%
count_bigrams() %>% View()
renderPlot({
tidy_total %>%
filter(.,movie==input$selected) %>%
count_bigrams() %>%
filter(n > 3,
!str_detect(word1, "\\d"),
!str_detect(word2, "\\d")) %>%
visualize_bigrams()
renderPlot({
tidy_total %>%
filter(.,movie==input$selected) %>%
count_bigrams() %>%
filter(n > 3,
!str_detect(word1, "\\d"),
!str_detect(word2, "\\d")) %>%
visualize_bigrams()
})
tidy_total %>%
filter(.,movie==input$selected) %>%
count_bigrams() %>%
filter(n > 3,
!str_detect(word1, "\\d"),
!str_detect(word2, "\\d")) %>%
visualize_bigrams()
tidy_total %>%
filter(.,movie=="Dunkirk") %>%
count_bigrams() %>%
filter(n > 3,
!str_detect(word1, "\\d"),
!str_detect(word2, "\\d")) %>%
visualize_bigrams()
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
tidy_total %>%
filter(.,movie=="Dunkirk") %>%
count_bigrams()
tidy_total %>%
filter(.,movie=="Dunkirk") %>%
count_bigrams()%>%
filter(n > 3,
!str_detect(word1, "\\d"),
!str_detect(word2, "\\d")) %>%
visualize_bigrams()
`Call Me by Your Name.csv` %>%
count_bigrams()
dataframe1 %>%count_bigrams()
dataframe3 %>%count_bigrams()
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
runApp('~/Desktop/shinyApps/shinyDashBoard')
runApp('~/Desktop/shinyApps/shinyDashBoard')
View(commentcounts)
View(commentcounts)
commentcounts[,movie_title==input$selected]
commentcounts[,movie_title=="Dunkirk"]
commentcounts[,movie_title=="Dunkirk"]
commentcounts[movie_title=="Dunkirk",]
tidy_total %>% filter(.,movie==input$selected) %>% sum(tidy_total[,"likes"])
tidy_total %>% filter(.,movie=="Dunkirk") %>% sum(tidy_total[,"likes"])
tidy_total %>% filter(.,movie=="Dunkirk")
tidy_total[,"likes"]
sum(tidy_total[,"likes"])
tidy_total %>% filter(.,movie=="Dunkirk") %>% sum(tidy_total[,"likes"])
tidy_total_like = tidy_total %>% filter(.,movie=="Dunkirk")
sum(tidy_total_like[,"likes"])
nrow(tidy_total_like = tidy_total %>% filter(.,movie=="Dunkirk") )
tidy_total_like[,"likes"]
sum(tidy_total_like[,"likes"])
View(dataframe7)
output$replies <- renderInfoBox(
tidy_total_replies = tidy_total %>% filter(.,movie==input$selected)
replies_yes = sum(tidy_total_replies[,"has_replies"==TRUE])
infoBox(input$selected,
mean(state_stat[,input$selected]),
icon = icon("calculator"), fill = TRUE))
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
sum(tidy_total_likes["has_replies"==TRUE,])
tidy_total_like = tidy_total %>% filter(.,movie==input$selected)
tidy_total_replies = tidy_total %>% filter(.,movie=="Dunkirk")
sum(tidy_total_replies["has_replies"==TRUE,])
sum(tidy_total_replies[,"has_replies"==TRUE])
n(tidy_total_replies[,"has_replies"==TRUE])
n(tidy_total_replies["has_replies"==TRUE,])
number_count(tidy_total_replies["has_replies"==TRUE,])
nrow(tidy_total_replies["has_replies"==TRUE,])
nrow(tidy_total_replies[,"has_replies"==TRUE])
nrow(tidy_total_replies)
nrow(tidy_total_replies[,"has_replies"==TRUE])
nrow(tidy_total_replies["has_replies"==TRUE,])
nrow(tidy_total_replies[has_replies==TRUE,])
nrow(tidy_total_replies[,has_replies==TRUE])
View(tidy_total_replies)
[1,2]
nrow(tidy_total_replies["has_replies"==TRUE,])
nrow(tidy_total_replies["has_replies"==TRUE,])
nrow(tidy_total_replies[,"has_replies"==TRUE])
nrow(tidy_total_replies)
nrow(tidy_total_replies["has_replies"==TRUE])
nrow(tidy_total_replies["has_replies"]==TRUE)
nrow(tidy_total_replies[,"has_replies"=="TRUE"])
nrow(tidy_total_replies["has_replies"=="TRUE",])
nrow(tidy_total_replies["has_replies"]=="TRUE")
tidy_total_replies = tidy_total %>% filter(.,movie=="Dunkirk", )
nrow(tidy_total_replies[tidy_total_replies$has_replies"=="TRUE")
nrow(tidy_total_replies[tidy_total_replies$has_replies=="TRUE")
output$replies <- renderInfoBox({
tidy_total_replies = tidy_total %>% filter(.,movie==input$selected)
replies_yes = sum(tidy_total_replies["has_replies"==TRUE,])
infoBox(input$selected,
mean(state_stat[,input$selected]),
icon = icon("calculator"), fill = TRUE)
})
}
tidy_total_replies = tidy_total %>% filter(.,movie=="Dunkirk", )
nrow(tidy_total_replies[tidy_total_replies$has_replies=="TRUE")
tidy_total_replies = tidy_total %>% filter(.,movie=="Dunkirk", ) %>%
nrow(tidy_total_replies[tidy_total_replies$has_replies=="TRUE")
output$replies <- renderInfoBox({
tidy_total_replies = tidy_total %>% filter(.,movie==input$selected)
replies_yes = sum(tidy_total_replies["has_replies"==TRUE,])
infoBox(input$selected,
mean(state_stat[,input$selected]),
icon = icon("calculator"), fill = TRUE)
})
}
tidy_total_replies = tidy_total %>% filter(.,movie=="Dunkirk", ) %>%
nrow(tidy_total_replies[tidy_total_replies$has_replies=="TRUE"])
tidy_total_replies = tidy_total %>% filter(.,movie=="Dunkirk", ) %>%
nrow(tidy_total_replies[tidy_total_replies$has_replies=="TRUE",])
tidy_total_replies = tidy_total %>% filter(.,movie=="Dunkirk" ) %>%
nrow(tidy_total_replies[tidy_total_replies$has_replies=="TRUE"])
nrow(tidy_total_replies = tidy_total %>% filter(.,movie=="Dunkirk" , has_replies =="TRUE"))
tidy_total_replies = tidy_total %>% filter(.,movie=="Dunkirk" , has_replies =="TRUE")
nrow(tidy_total_replies)
runApp('~/NYCDSA/OscarPrac')
commentcounts[movie_title==input$selected,]
commentcounts[movie_title==Dunkirk,]
commentcounts[movie_title=="Dunkirk",]
commentcounts[movie_title=="Dunkirk",]
commentcounts[movie_title=="Dunkirk",](number_count)
commentcounts[movie_title==input$selected, number_counts]
commentcounts[movie_title==input$selected,]
commentcounts[movie_title=="Dunkirk",2]
runApp('~/NYCDSA/OscarPrac')
runApp('~/NYCDSA/OscarPrac')
rm(choice)
choice = c()
for(i in 1:length(temp)){
choice = c(choice, gsub(as.character(temp[i]), pattern=".csv$", replacement=""))
}
choice
runApp('~/NYCDSA/OscarPrac')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("fontawesome")
install.package("font-awesome")
install.package("fontawesome")
devtools::install_github("rstudio/fontawesome")
library(fontawesome)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shiny.semantic")
install.packages("shiny.semantic")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny.semantic)
runApp()
runApp()
runApp()
runApp()
runApp()
temp
choice
tidy_total %>%
filter(.,movie=="Dunkirk") %>%
count_bigrams()
runApp()
runApp('~/NYCDSA/OscarPrac')
runApp()
runApp('~/NYCDSA/OscarPrac')
runApp()
runApp()
runApp()
